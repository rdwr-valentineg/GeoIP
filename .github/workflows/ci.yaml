name: CI

on:
  push:
  pull_request:

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Run unit tests
        run: make test

      - name: Build binary
        run: make build

  docker-integration:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v4

      - name: Download GeoLite2 Country DB
        run: |
          mkdir -p mmdb
          curl -L -o mmdb/GeoLite2-Country.mmdb "https://raw.githubusercontent.com/P3TERX/GeoLite.mmdb/download/GeoLite2-Country.mmdb"

      - name: Build Docker image
        run: docker build -t geoip-test .

      - name: Start container with valid DB
        run: |
          docker run -d --name geoip-ok -p 8080:8080 \
            -v ${{ github.workspace }}/mmdb:/mmdb \
            geoip-test --exclude 192.168.0.0/24

      - name: Wait for readiness
        run: sleep 5

      - name: Test /healthz
        run: curl --fail http://localhost:8080/healthz

      - name: Test /ready
        run: curl --fail http://localhost:8080/ready

      - name: Test /auth (should succeed)
        run: |
          curl --fail -H "X-Forwarded-For: 192.168.0.1" http://localhost:8080/auth 
      
      - name: Test /auth (should fail)
        run: |
          ! curl --fail -H "X-Forwarded-For: 213.176.123.5" http://localhost:8080/auth 

      - name: Test missing DB (should fail gracefully)
        run: |
          set +e
          output=$(docker run --rm geoip-test --db /missing.mmdb 2>&1)
          status=$?
          echo "$output"
          echo "$output" | grep "Could not open GeoIP DB"
          if [ $status -eq 0 ]; then
            echo "Expected failure but command succeeded"
            exit 1
          fi

      - name: Stop and remove container
        run: docker rm -f geoip-test
